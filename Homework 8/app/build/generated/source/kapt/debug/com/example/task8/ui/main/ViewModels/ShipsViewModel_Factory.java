// Generated by Dagger (https://dagger.dev).
package com.example.task8.ui.main.ViewModels;

import com.example.task8.db.SwDatabase;
import com.example.task8.network.SWApiService;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ShipsViewModel_Factory implements Factory<ShipsViewModel> {
  private final Provider<SWApiService> apiServiceProvider;

  private final Provider<SwDatabase> dbProvider;

  public ShipsViewModel_Factory(Provider<SWApiService> apiServiceProvider,
      Provider<SwDatabase> dbProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.dbProvider = dbProvider;
  }

  @Override
  public ShipsViewModel get() {
    return newInstance(apiServiceProvider.get(), dbProvider.get());
  }

  public static ShipsViewModel_Factory create(Provider<SWApiService> apiServiceProvider,
      Provider<SwDatabase> dbProvider) {
    return new ShipsViewModel_Factory(apiServiceProvider, dbProvider);
  }

  public static ShipsViewModel newInstance(SWApiService apiService, SwDatabase db) {
    return new ShipsViewModel(apiService, db);
  }
}
