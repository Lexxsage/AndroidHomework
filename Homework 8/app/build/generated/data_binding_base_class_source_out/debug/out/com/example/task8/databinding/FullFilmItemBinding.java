// Generated by view binder compiler. Do not edit!
package com.example.task8.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.task8.R;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FullFilmItemBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialTextView constDirector;

  @NonNull
  public final MaterialTextView constEpisodeID;

  @NonNull
  public final MaterialTextView constOpeningCrawl;

  @NonNull
  public final MaterialTextView constProducer;

  @NonNull
  public final MaterialTextView constTitle;

  @NonNull
  public final MaterialTextView director;

  @NonNull
  public final MaterialTextView episodeId;

  @NonNull
  public final MaterialTextView openingCrawl;

  @NonNull
  public final MaterialTextView producer;

  @NonNull
  public final MaterialTextView title;

  private FullFilmItemBinding(@NonNull ScrollView rootView, @NonNull MaterialTextView constDirector,
      @NonNull MaterialTextView constEpisodeID, @NonNull MaterialTextView constOpeningCrawl,
      @NonNull MaterialTextView constProducer, @NonNull MaterialTextView constTitle,
      @NonNull MaterialTextView director, @NonNull MaterialTextView episodeId,
      @NonNull MaterialTextView openingCrawl, @NonNull MaterialTextView producer,
      @NonNull MaterialTextView title) {
    this.rootView = rootView;
    this.constDirector = constDirector;
    this.constEpisodeID = constEpisodeID;
    this.constOpeningCrawl = constOpeningCrawl;
    this.constProducer = constProducer;
    this.constTitle = constTitle;
    this.director = director;
    this.episodeId = episodeId;
    this.openingCrawl = openingCrawl;
    this.producer = producer;
    this.title = title;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FullFilmItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FullFilmItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.full_film_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FullFilmItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constDirector;
      MaterialTextView constDirector = rootView.findViewById(id);
      if (constDirector == null) {
        break missingId;
      }

      id = R.id.constEpisodeID;
      MaterialTextView constEpisodeID = rootView.findViewById(id);
      if (constEpisodeID == null) {
        break missingId;
      }

      id = R.id.constOpeningCrawl;
      MaterialTextView constOpeningCrawl = rootView.findViewById(id);
      if (constOpeningCrawl == null) {
        break missingId;
      }

      id = R.id.constProducer;
      MaterialTextView constProducer = rootView.findViewById(id);
      if (constProducer == null) {
        break missingId;
      }

      id = R.id.constTitle;
      MaterialTextView constTitle = rootView.findViewById(id);
      if (constTitle == null) {
        break missingId;
      }

      id = R.id.director;
      MaterialTextView director = rootView.findViewById(id);
      if (director == null) {
        break missingId;
      }

      id = R.id.episode_id;
      MaterialTextView episodeId = rootView.findViewById(id);
      if (episodeId == null) {
        break missingId;
      }

      id = R.id.openingCrawl;
      MaterialTextView openingCrawl = rootView.findViewById(id);
      if (openingCrawl == null) {
        break missingId;
      }

      id = R.id.producer;
      MaterialTextView producer = rootView.findViewById(id);
      if (producer == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new FullFilmItemBinding((ScrollView) rootView, constDirector, constEpisodeID,
          constOpeningCrawl, constProducer, constTitle, director, episodeId, openingCrawl, producer,
          title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
