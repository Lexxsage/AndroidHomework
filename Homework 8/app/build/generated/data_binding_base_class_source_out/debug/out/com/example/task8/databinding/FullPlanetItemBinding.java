// Generated by view binder compiler. Do not edit!
package com.example.task8.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.task8.R;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FullPlanetItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialTextView climate;

  @NonNull
  public final MaterialTextView constClimate;

  @NonNull
  public final MaterialTextView constDiameter;

  @NonNull
  public final MaterialTextView constGravity;

  @NonNull
  public final MaterialTextView constName;

  @NonNull
  public final MaterialTextView constOrbital;

  @NonNull
  public final MaterialTextView constPopulation;

  @NonNull
  public final MaterialTextView constRotation;

  @NonNull
  public final MaterialTextView constTerrain;

  @NonNull
  public final MaterialTextView constWater;

  @NonNull
  public final MaterialTextView diameter;

  @NonNull
  public final MaterialTextView gravity;

  @NonNull
  public final MaterialTextView name;

  @NonNull
  public final MaterialTextView orbital;

  @NonNull
  public final MaterialTextView population;

  @NonNull
  public final MaterialTextView rotation;

  @NonNull
  public final MaterialTextView terrain;

  @NonNull
  public final MaterialTextView water;

  private FullPlanetItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialTextView climate, @NonNull MaterialTextView constClimate,
      @NonNull MaterialTextView constDiameter, @NonNull MaterialTextView constGravity,
      @NonNull MaterialTextView constName, @NonNull MaterialTextView constOrbital,
      @NonNull MaterialTextView constPopulation, @NonNull MaterialTextView constRotation,
      @NonNull MaterialTextView constTerrain, @NonNull MaterialTextView constWater,
      @NonNull MaterialTextView diameter, @NonNull MaterialTextView gravity,
      @NonNull MaterialTextView name, @NonNull MaterialTextView orbital,
      @NonNull MaterialTextView population, @NonNull MaterialTextView rotation,
      @NonNull MaterialTextView terrain, @NonNull MaterialTextView water) {
    this.rootView = rootView;
    this.climate = climate;
    this.constClimate = constClimate;
    this.constDiameter = constDiameter;
    this.constGravity = constGravity;
    this.constName = constName;
    this.constOrbital = constOrbital;
    this.constPopulation = constPopulation;
    this.constRotation = constRotation;
    this.constTerrain = constTerrain;
    this.constWater = constWater;
    this.diameter = diameter;
    this.gravity = gravity;
    this.name = name;
    this.orbital = orbital;
    this.population = population;
    this.rotation = rotation;
    this.terrain = terrain;
    this.water = water;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FullPlanetItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FullPlanetItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.full_planet_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FullPlanetItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.climate;
      MaterialTextView climate = rootView.findViewById(id);
      if (climate == null) {
        break missingId;
      }

      id = R.id.constClimate;
      MaterialTextView constClimate = rootView.findViewById(id);
      if (constClimate == null) {
        break missingId;
      }

      id = R.id.constDiameter;
      MaterialTextView constDiameter = rootView.findViewById(id);
      if (constDiameter == null) {
        break missingId;
      }

      id = R.id.constGravity;
      MaterialTextView constGravity = rootView.findViewById(id);
      if (constGravity == null) {
        break missingId;
      }

      id = R.id.constName;
      MaterialTextView constName = rootView.findViewById(id);
      if (constName == null) {
        break missingId;
      }

      id = R.id.constOrbital;
      MaterialTextView constOrbital = rootView.findViewById(id);
      if (constOrbital == null) {
        break missingId;
      }

      id = R.id.constPopulation;
      MaterialTextView constPopulation = rootView.findViewById(id);
      if (constPopulation == null) {
        break missingId;
      }

      id = R.id.constRotation;
      MaterialTextView constRotation = rootView.findViewById(id);
      if (constRotation == null) {
        break missingId;
      }

      id = R.id.constTerrain;
      MaterialTextView constTerrain = rootView.findViewById(id);
      if (constTerrain == null) {
        break missingId;
      }

      id = R.id.constWater;
      MaterialTextView constWater = rootView.findViewById(id);
      if (constWater == null) {
        break missingId;
      }

      id = R.id.diameter;
      MaterialTextView diameter = rootView.findViewById(id);
      if (diameter == null) {
        break missingId;
      }

      id = R.id.gravity;
      MaterialTextView gravity = rootView.findViewById(id);
      if (gravity == null) {
        break missingId;
      }

      id = R.id.name;
      MaterialTextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.orbital;
      MaterialTextView orbital = rootView.findViewById(id);
      if (orbital == null) {
        break missingId;
      }

      id = R.id.population;
      MaterialTextView population = rootView.findViewById(id);
      if (population == null) {
        break missingId;
      }

      id = R.id.rotation;
      MaterialTextView rotation = rootView.findViewById(id);
      if (rotation == null) {
        break missingId;
      }

      id = R.id.terrain;
      MaterialTextView terrain = rootView.findViewById(id);
      if (terrain == null) {
        break missingId;
      }

      id = R.id.water;
      MaterialTextView water = rootView.findViewById(id);
      if (water == null) {
        break missingId;
      }

      return new FullPlanetItemBinding((ConstraintLayout) rootView, climate, constClimate,
          constDiameter, constGravity, constName, constOrbital, constPopulation, constRotation,
          constTerrain, constWater, diameter, gravity, name, orbital, population, rotation, terrain,
          water);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
